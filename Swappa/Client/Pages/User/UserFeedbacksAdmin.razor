@page "/admin/feedbacks"
@attribute [Authorize(Roles = "SuperAdmin, Admin")]

<PageTitle>Users' Feedbacks</PageTitle>
<div class="container">
  <div class="row g-3 my-3 d-flex justify-content-evenly flex-wrap align-items-center">
        <BackButton></BackButton>
        @if(Data == null)
        {
            <div class="text-center align-self-center top-50 m-auto">
                <Spinner Type="SpinnerType.Grow" Size="SpinnerSize.Large" Color="SpinnerColor.Primary" />
            </div>
        }
        else
        {
            <div class="row g-3 my-3 d-flex justify-content-evenly flex-wrap align-items-center">
                <div class="col-12 col-md-6 col-lg-4">
                    <SinglePillCardDash 
                        Background="FeedbackRating.Average" 
                        CardTitle="Total Users' Feedbacks" 
                        PillContent="@count">
                    </SinglePillCardDash>
                </div>
                <div class="col-12 col-md-6 col-lg-4">
                    <SinglePillCardDash 
                        Background="@averageRating"
                        PillContent="@averageRating.GetDescription()"
                        CardTitle="Average Rating">
                    </SinglePillCardDash>
                </div>
            </div>
            <div class="box-shadow-inset m-auto mt-1">
                <EditForm Model="Query" method="post" OnValidSubmit="Search" FormName="searchFeedbacks">
                    <BaseSearch ClearSearch="Clear" Query="@Query" />
                </EditForm>
            </div>
            <div class="table-responsive">
                <table class="table table-striped table-hover table-borderless caption-top">
                    <caption>Users' Feedbacks</caption>
                    <thead>
                        <tr>
                            <th style="background: #002147; color: white;"></th>
                            <th style="background: #002147; color: white;">Name</th>
                            <th style="background: #002147; color: white;">Email</th>
                            <th style="background: #002147; color: white;">Feedback</th>
                            <th style="background: #002147; color: white;">Rating</th>
                            <th style="background: #002147; color: white;">Date</th>
                            <th style="background: #002147; color: white;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (_isLoading)
                        {
                            <tr class="text-center align-self-center top-50 m-auto mt-5">
                                <Spinner Type="SpinnerType.Grow" Size="SpinnerSize.Large" Color="SpinnerColor.Primary" />
                            </tr>
                        }
                        else if (_hasError)
                        {
                            <Alert Color="AlertColor.Danger">
                                <h4 class="alert-heading text-center">An error Occurred!</h4>
                                <p class="text-center">
                                    <Icon Name="IconName.Bug"></Icon> Something went wrong. Please contact support if issue persists.
                                </p>
                            </Alert>
                        }
                        else if (Data.IsNotNull() && Data.Data.Data.IsNotNullOrEmpty())
                        {
                            @foreach (var feedback in Data.Data.Data)
                            {
                                <tr class="box-shadow-inset">
                                    <th>
                                        <UserStatus Status="@GetStatus(feedback.IsDeprecated)"></UserStatus>
                                    </th>
                                    <td>@feedback.UserName</td>
                                    <td>
                                        <a href="mailto:@(feedback.UserEmail)">@feedback.UserEmail</a>
                                    </td>
                                    <td>@feedback.Feedback</td>
                                    <td>@feedback.Rating.GetDescription()</td>
                                    <td>@feedback.CreatedAt.ToString("g")</td>
                                    <td>
                                        <Dropdown Direction="DropdownDirection.DropdownCentered">
                                            <DropdownToggleButton Color="ButtonColor.Primary"></DropdownToggleButton>
                                            <DropdownMenu>
                                                <DropdownItem Type="DropdownItemType.Link" @onclick="@(async () => await DeprecateFeedback(feedback.Id, DepText(feedback).Trim()))">
                                                    <Button Color="ButtonColor.Warning" Outline="true">
                                                        <Icon Name="IconName.ArrowCounterclockwise" />@DepText(feedback)
                                                    </Button>
                                                </DropdownItem>
                                                <AuthorizeView Roles="SuperAdmin">
                                                    <Authorized>
                                                        <DropdownItem Type="DropdownItemType.Link" @onclick="@(async () => await DeleteFeedback(feedback.Id))">
                                                            <Button Color="ButtonColor.Danger" Outline="true">
                                                                <Icon Name="IconName.Trash" /> Delete
                                                            </Button>
                                                        </DropdownItem>
                                                    </Authorized>
                                                </AuthorizeView>
                                            </DropdownMenu>
                                        </Dropdown>
                                    </td>
                                </tr>
                            }

                            <Pagination ActivePageNumber="@Data.Data.MetaData.CurrentPage"
                                        TotalPages="@Data.Data.MetaData.TotalPages"
                                        Alignment="Alignment.Center"
                                        FirstLinkIcon="IconName.ChevronDoubleLeft"
                                        PreviousLinkIcon="IconName.ChevronLeft"
                                        NextLinkIcon="IconName.ChevronRight"
                                        LastLinkIcon="IconName.ChevronDoubleRight"
                                        PageChanged="OnPageChangedAsync"
                                        Class="mt-3" />
                        }
                        else
                        {
                            <Alert Color="AlertColor.Info">
                                <h4 class="alert-heading text-center">No record found!</h4>
                                <p class="text-center">
                                    <Icon Name="IconName.InfoCircle"></Icon>  No record!.
                                </p>
                            </Alert>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>