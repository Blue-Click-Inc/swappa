<PageTitle>@pageTitle</PageTitle>

 <div class="row">
    <div class="box-shadow-inset border-radius-2rem p-3">
        @if (isDataLocading)
        {
            <div class="text-center align-self-center top-50 m-auto">
                <Spinner Type="SpinnerType.Grow" Size="SpinnerSize.Large" Color="SpinnerColor.Primary" />
            </div>
        }
        else if (isError)
        {
            <Alert Style="AlertStyle.Danger">
                <ChildContent>An error occurred! Please close this page and try again.</ChildContent>
            </Alert>
        }
        else
        {
            <EditForm Model="Model" method="post" OnValidSubmit="UpdateAsync" FormName="details">
                <DataAnnotationsValidator />
                <h3>
                    <span class="oi oi-pencil text-muted fw-bold" aria-hidden="true"> Update Role</span>
                </h3>
                <hr />
                <div class="row">
                    <div class="form-floating mb-3 px-1">
                        <InputText 
                            @bind-Value="Model.RoleName" 
                            class="form-control" 
                            autocomplete="RoleName"
                            aria-required="true" 
                        />
                        <label for="RoleName" class="form-label">Role Name</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-0 col-lg-2"></div>
                    <div class="col-md-12 col-lg-8 d-flex justify-content-center">
                        <div class="d-flex justify-content-center flex-column flex-md-row w-100">
                            <Button Color="ButtonColor.Primary" Outline="true" Type="ButtonType.Submit" Class="mx-1 mt-1" Disabled="@isLoading">
                                <Icon Name="IconName.Save" /> @buttonLabel
                            </Button>
                            <Button Color="ButtonColor.Secondary" Outline="true" Class="mx-1 mt-1" Disabled="@isLoading" @onclick="(async () => await SharedService.CancelModalAsync(Instance))">
                                <Icon Name="IconName.ArrowLeft" /> Back
                            </Button>
                        </div>
                    </div>
                    <div class="col-md-0 col-lg-2"></div>
                </div>
            </EditForm>
        }
    </div>
</div>